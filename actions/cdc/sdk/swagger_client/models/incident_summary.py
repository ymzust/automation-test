# coding: utf-8

"""
    CyberProof Platform Backend API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.3.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.incident_summary_survey import IncidentSummarySurvey  # noqa: F401,E501


class IncidentSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'text': 'str',
        'survey': 'list[IncidentSummarySurvey]'
    }

    attribute_map = {
        'text': 'text',
        'survey': 'survey'
    }

    def __init__(self, text=None, survey=None):  # noqa: E501
        """IncidentSummary - a model defined in Swagger"""  # noqa: E501

        self._text = None
        self._survey = None
        self.discriminator = None

        if text is not None:
            self.text = text
        if survey is not None:
            self.survey = survey

    @property
    def text(self):
        """Gets the text of this IncidentSummary.  # noqa: E501

        Short summary for the incident  # noqa: E501

        :return: The text of this IncidentSummary.  # noqa: E501
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this IncidentSummary.

        Short summary for the incident  # noqa: E501

        :param text: The text of this IncidentSummary.  # noqa: E501
        :type: str
        """

        self._text = text

    @property
    def survey(self):
        """Gets the survey of this IncidentSummary.  # noqa: E501

        Close incident questions  # noqa: E501

        :return: The survey of this IncidentSummary.  # noqa: E501
        :rtype: list[IncidentSummarySurvey]
        """
        return self._survey

    @survey.setter
    def survey(self, survey):
        """Sets the survey of this IncidentSummary.

        Close incident questions  # noqa: E501

        :param survey: The survey of this IncidentSummary.  # noqa: E501
        :type: list[IncidentSummarySurvey]
        """

        self._survey = survey

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IncidentSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
