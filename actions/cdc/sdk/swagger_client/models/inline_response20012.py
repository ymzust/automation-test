# coding: utf-8

"""
    CyberProof Platform Backend API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.3.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.inline_response2001 import InlineResponse2001  # noqa: F401,E501
from swagger_client.models.inline_response2004 import InlineResponse2004  # noqa: F401,E501
from swagger_client.models.inline_response2006 import InlineResponse2006  # noqa: F401,E501
from swagger_client.models.inline_response2007 import InlineResponse2007  # noqa: F401,E501


class InlineResponse20012(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'incident': 'InlineResponse2006',
        'alert': 'InlineResponse2001',
        'message': 'InlineResponse2007',
        'observable': 'InlineResponse2004'
    }

    attribute_map = {
        'incident': 'incident',
        'alert': 'alert',
        'message': 'message',
        'observable': 'observable'
    }

    def __init__(self, incident=None, alert=None, message=None, observable=None):  # noqa: E501
        """InlineResponse20012 - a model defined in Swagger"""  # noqa: E501

        self._incident = None
        self._alert = None
        self._message = None
        self._observable = None
        self.discriminator = None

        if incident is not None:
            self.incident = incident
        if alert is not None:
            self.alert = alert
        if message is not None:
            self.message = message
        if observable is not None:
            self.observable = observable

    @property
    def incident(self):
        """Gets the incident of this InlineResponse20012.  # noqa: E501


        :return: The incident of this InlineResponse20012.  # noqa: E501
        :rtype: InlineResponse2006
        """
        return self._incident

    @incident.setter
    def incident(self, incident):
        """Sets the incident of this InlineResponse20012.


        :param incident: The incident of this InlineResponse20012.  # noqa: E501
        :type: InlineResponse2006
        """

        self._incident = incident

    @property
    def alert(self):
        """Gets the alert of this InlineResponse20012.  # noqa: E501


        :return: The alert of this InlineResponse20012.  # noqa: E501
        :rtype: InlineResponse2001
        """
        return self._alert

    @alert.setter
    def alert(self, alert):
        """Sets the alert of this InlineResponse20012.


        :param alert: The alert of this InlineResponse20012.  # noqa: E501
        :type: InlineResponse2001
        """

        self._alert = alert

    @property
    def message(self):
        """Gets the message of this InlineResponse20012.  # noqa: E501


        :return: The message of this InlineResponse20012.  # noqa: E501
        :rtype: InlineResponse2007
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InlineResponse20012.


        :param message: The message of this InlineResponse20012.  # noqa: E501
        :type: InlineResponse2007
        """

        self._message = message

    @property
    def observable(self):
        """Gets the observable of this InlineResponse20012.  # noqa: E501


        :return: The observable of this InlineResponse20012.  # noqa: E501
        :rtype: InlineResponse2004
        """
        return self._observable

    @observable.setter
    def observable(self, observable):
        """Sets the observable of this InlineResponse20012.


        :param observable: The observable of this InlineResponse20012.  # noqa: E501
        :type: InlineResponse2004
        """

        self._observable = observable

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20012):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
